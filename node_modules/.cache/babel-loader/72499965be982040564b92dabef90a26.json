{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imran nur hirey\\\\Desktop\\\\million\\\\src\\\\QuestionsBox.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionsBox(_ref) {\n  _s();\n\n  let {\n    setquestionnumber,\n    settimeout,\n    data,\n    questionnumber\n  } = _ref;\n  console.log(data);\n  const [question, setquestion] = useState(null);\n  useEffect(() => {\n    setquestion(data[questionnumber - 1]);\n  }, [data, questionnumber]);\n\n  const Handleclick = correct => {\n    if (correct) {\n      setquestionnumber(questionnumber + 1);\n    } else {\n      setquestionnumber(questionnumber);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: question === null || question === void 0 ? void 0 : question.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers \",\n      children: question === null || question === void 0 ? void 0 : question.answers.map(b => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => Handleclick(b.correct),\n        className: \"answer\",\n        children: b.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 22\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuestionsBox, \"ksbbEWkNV2RJMPCxsa24BFQ5mzQ=\");\n\n_c = QuestionsBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionsBox\");","map":{"version":3,"sources":["C:/Users/imran nur hirey/Desktop/million/src/QuestionsBox.jsx"],"names":["useEffect","useState","QuestionsBox","setquestionnumber","settimeout","data","questionnumber","console","log","question","setquestion","Handleclick","correct","answers","map","b","text"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,6BAAzB;;AAGA,eAAe,SAASC,YAAT,OAA6E;AAAA;;AAAA,MAAvD;AAAGC,IAAAA,iBAAH;AAAqBC,IAAAA,UAArB;AAAgCC,IAAAA,IAAhC;AAAqCC,IAAAA;AAArC,GAAuD;AACxFC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACF,QAAM,CAACI,QAAD,EAAUC,WAAV,IAAuBT,QAAQ,CAAC,IAAD,CAArC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,WAAW,CAACL,IAAI,CAACC,cAAc,GAAC,CAAhB,CAAL,CAAX;AACH,GAFQ,EAEP,CAACD,IAAD,EAAMC,cAAN,CAFO,CAAT;;AAGA,QAAMK,WAAW,GAAEC,OAAD,IAAW;AACzB,QAAIA,OAAJ,EAAY;AACRT,MAAAA,iBAAiB,CAACG,cAAc,GAAC,CAAhB,CAAjB;AAEH,KAHD,MAII;AACCH,MAAAA,iBAAiB,CAACG,cAAD,CAAjB;AAEJ;AAEJ,GAVD;;AAWE,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2BG,QAA3B,aAA2BA,QAA3B,uBAA2BA,QAAQ,CAAEA;AAArC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACKA,QADL,aACKA,QADL,uBACKA,QAAQ,CAAEI,OAAV,CAAkBC,GAAlB,CAAsBC,CAAC,iBACnB;AAAM,QAAA,OAAO,EAAE,MAAIJ,WAAW,CAACI,CAAC,CAACH,OAAH,CAA9B;AAA2C,QAAA,SAAS,EAAC,QAArD;AAAA,kBAA+DG,CAAC,CAACC;AAAjE;AAAA;AAAA;AAAA;AAAA,cADJ;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAhCuBd,Y;;KAAAA,Y","sourcesContent":["import { useEffect } from \"react\"\r\nimport { useState } from \"react/cjs/react.development\"\r\n\r\n\r\nexport default function QuestionsBox({  setquestionnumber,settimeout,data,questionnumber }) {\r\n    console.log(data)\r\n  const [question,setquestion]=useState(null)\r\n  useEffect(()=>{\r\n      setquestion(data[questionnumber-1])\r\n  },[data,questionnumber])\r\n  const Handleclick=(correct)=>{\r\n      if (correct){\r\n          setquestionnumber(questionnumber+1)\r\n\r\n      }\r\n      else{\r\n           setquestionnumber(questionnumber)\r\n\r\n      }\r\n      \r\n  }\r\n    return (\r\n        <div className='qbox'>\r\n            <div className=\"question\">{question?.question}</div>\r\n            <div className='answers '>\r\n                {question?.answers.map(b=>(\r\n                     <div  onClick={()=>Handleclick(b.correct)} className=\"answer\">{b.text}</div>\r\n\r\n                ))}\r\n            \r\n            \r\n            </div>\r\n           \r\n            \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}